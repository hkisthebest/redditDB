name: CI

on:
  push:
    branches:
      - main
jobs:
  deploy:

    name: scp
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: copy file via ssh password
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          source: "*"
          target: ~/redditDB/

      - name: start
        uses: appleboy/ssh-action@master
        env:
          PORT: ${{ secrets.PORT }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PWD: ${{ secrets.DB_PWD }}
          DB_URL: ${{ secrets.DB_URL }}
          REDDIT_BASIC_AUTH: ${{ secrets.REDDIT_BASIC_AUTH }}
          REDDIT_USER: ${{ secrets.REDDIT_USER }}
          REDDIT_PWD: ${{ secrets.REDDIT_PWD }}
          CRONJOB: ${{ secrets.CRONJOB }}
          ENV: ${{ secrets.ENV }}

        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PASSWORD }}
          envs: PORT,DB_USER,DB_PWD,DB_URL,REDDIT_BASIC_AUTH,REDDIT_USER,REDDIT_PWD,CRONJOB,ENV
          script: |
            cd ~/redditDB/server
            echo "PORT=$PORT" > .env
            echo "DB_USER=$DB_USER" >> .env
            echo "DB_PWD=$DB_PWD" >> .env
            echo "DB_URL=\"$DB_URL\"" >> .env
            echo "REDDIT_BASIC_AUTH=\"$REDDIT_BASIC_AUTH\"" >> .env
            echo "REDDIT_USER=$REDDIT_USER" >> .env
            echo "REDDIT_PWD=$REDDIT_PWD" >> .env
            echo "CRONJOB=$CRONJOB" >> .env
            echo "ENV=$ENV" >> .env
            sudo docker compose -f compose.yaml down --rmi "all"
            sudo docker compose -f compose.yaml up -d
            cd ~/redditDB/app
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh
            npm install
            npm run build
            cd dist
            sudo rm -rf /var/www/html/*
            sudo mv * /var/www/html
